
Definitions:
    emu: {filename: formulation.lp}
    inst: {filename: instance.lp}
    both: {group: [emu, inst]}
    
Test Full Program On Instance:
    Modules: both
    Expect: SAT
        
Test PC Advance:
    Modules: emu
    inline: |
        #const maxpc = 2.
        #const maxtime = 2.
        end(2).
        advance :-
            pcat(1, 1),
            pcat(0, 0).
        :- not advance.
    Expect: SAT
        
Test Z Flag CMP:
    Modules: emu
    inline: |
        #const maxtime = 2.
        #const maxpc = 2
        cmp_imm(1, eax, zero).
        end(2).
        :- not flg(2, z).
    Expect: SAT
        
Test NZ Flag CMP:
    Modules: emu
    inline: |
        #const maxtime = 2.
        #const maxpc = 2
        cmp_imm(1, eax, 0).
        end(2).
        :- flg(2, z).
    Expect: SAT
        
Test S Flag CMP:
    Modules: emu
    inline: |
        #const maxtime = 2.
        #const maxpc = 2
        cmp_imm(1, eax, 0).
        end(2).
        :- not flg(2, s).
    Expect: SAT
        
Test NS Flag CMP:
    Modules: emu
    inline: |
        #const maxtime = 2.
        #const maxpc = 2
        cmp_imm(1, eax, 0..intlen-1).
        end(2).
        :- flg(2, s).
    Expect: SAT
        
Test C Flag CMP:
    Modules: emu
    inline: |
        #const maxtime = 2.
        #const maxpc = 2
        cmp_imm(1, eax, 0).
        end(2).
        :- not flg(2, c).
    Expect: SAT
        
Test NC Flag CMP:
    Modules: emu
    inline: |
        #const maxtime = 2.
        #const maxpc = 2
        cmp_imm(1, eax, 0).
        end(2).
        :- flg(2, c).
    Expect: SAT